name: "CodeQL Bundle: Create bundle"
description: "Action to build custom CodeQL bundles"
inputs:
  bundle-path:
    description: Path to the bundle to customize
    required: true
  packs:
    description: A comma-separated list of CodeQL packs to include in the bundle
    required: true
  workspace:
    description: Root directory where the codeql-workspace.yml file is located
    required: false
    default: "."
  default-code-scanning-config:
    description: Path to the default code scanning configuration file
    required: false
    default: ""
  platforms:
    description: A comma-separated list of platforms to build the bundle for, if supported by the bundle. Typically used with the generic bundle to build a specific platform bundle on a different runner architecture.
    required: false
    default: ""
  debug:
    description: Enable debug logging, by setting this value to "true"
    required: false
    default: "false"
outputs:
  output-path:
    description: Path to the created bundle or directory if multiple platforms are specified
    value: ${{ steps.create-bundle.outputs.output-path }}
runs:
  using: "composite"
  steps:
    - uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    - run: |
        echo "::group::Installing dependencies"
        echo "Installing codeql-bundle v0.2.0"
        python -m pip install https://github.com/advanced-security/codeql-bundle/releases/download/v0.2.0/codeql_bundle-0.2.0-py3-none-any.whl
        echo "::endgroup::"
      shell: bash
    - id: create-bundle
      env:
        BUNDLE_PATH: ${{ inputs.bundle-path }}
        PACKS: ${{ inputs.packs }}
        WORKSPACE: ${{ inputs.workspace }}
        DEFAULT_CODE_SCANNING_CONFIG: ${{ inputs.default-code-scanning-config }}
        PLATFORMS: ${{ inputs.platforms }}
        RUNNER_TEMP: ${{ runner.temp }}
        DEBUG: ${{ inputs.debug }}
      shell: bash
      run: |
        #!/bin/bash

        set -e

        echo "::group::Creating CodeQL bundle."
        echo "Using bundle at ${BUNDLE_PATH}."
        echo "Using workspace at ${WORKSPACE}."
        output_path=${RUNNER_TEMP}/codeql-bundle.tar.gz
        opts=()
        opts+=("--bundle" "${BUNDLE_PATH}")
        opts+=("--workspace" "${WORKSPACE}")
        if [[ -n ${PLATFORMS} ]]; then
            echo "Targetting the platforms ${PLATFORMS}."
            for platform in $(echo $PLATFORMS | tr ',' ' '); do
            opts+=("--platform" "${platform}")
            done
            # When building multiple bundles, the output path is the directory containing the bundles
            output_path=${RUNNER_TEMP}/bundles
            mkdir -p ${output_path}
        fi
        opts+=("--output" "${output_path}")
        if [[ -n ${DEFAULT_CODE_SCANNING_CONFIG} ]]; then
            echo "Using code scanning config at ${DEFAULT_CODE_SCANNING_CONFIG} as the default config."
            opts+=("--code-scanning-config" "${DEFAULT_CODE_SCANNING_CONFIG}")
        fi

        if [[ ${DEBUG} -eq "true" ]]; then
            opts+=("--log DEBUG")
        fi


        codeql-bundle ${opts[@]} $(echo ${PACKS} | tr ',' ' ')
        echo "::endgroup::"

        echo "output-path=${output_path}" >> $GITHUB_OUTPUT
